/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-tsconfig-workspaces",
factory: function (require) {
"use strict";var plugin=(()=>{var p=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var k=Object.prototype.hasOwnProperty;var y=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(s,o)=>(typeof require<"u"?require:s)[o]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var E=(t,s)=>{for(var o in s)p(t,o,{get:s[o],enumerable:!0})},N=(t,s,o,i)=>{if(s&&typeof s=="object"||typeof s=="function")for(let n of P(s))!k.call(t,n)&&n!==o&&p(t,n,{get:()=>s[n],enumerable:!(i=w(s,n))||i.enumerable});return t};var O=t=>N(p({},"__esModule",{value:!0}),t);var D={};E(D,{default:()=>d});var e=y("@yarnpkg/core"),a=y("@yarnpkg/fslib"),d={hooks:{async afterAllInstalled(t,{report:s}){await s.startTimerPromise("Sync workspaces",async()=>{let o=a.ppath.join(t.cwd,"tsconfig.json");if(!!await a.xfs.existsPromise(o))try{let i=await a.xfs.readFilePromise(o,"utf8").then(JSON.parse);if(!t.tryWorkspaceByCwd(t.cwd))return;let f=Object.keys(i.compilerOptions.paths??{});i.compilerOptions.paths={};let{paths:l}=i.compilerOptions,m=[];t.workspaces.filter(r=>r.cwd!==t.cwd&&r.manifest.name.scope!=="private").forEach(({relativeCwd:r,manifest:{name:u}})=>{if(u){let c=e.structUtils.stringifyIdent(u);l[c]=[r],f.includes(c)||m.push(c)}});let g=Object.keys(l),h=f.filter(r=>!g.includes(r));m.forEach(r=>{s.reportInfo(e.MessageName.UNNAMED,e.formatUtils.pretty(t.configuration,`+ ${r}`,"ADDED"))}),h.forEach(r=>{s.reportInfo(e.MessageName.UNNAMED,e.formatUtils.pretty(t.configuration,`- ${r}`,"REMOVED"))}),await a.xfs.writeFilePromise(o,`${JSON.stringify(i,null,2)}
`)}catch(i){s.reportError(e.MessageName.UNNAMED,`\u041D\u0435 \u0443\u0434\u0430\u0451\u0442\u0441\u044F \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0442\u044C \u0444\u0430\u0439\u043B tsconfig.json. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044C, \u0447\u0442\u043E \u043E\u043D \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0444\u043E\u0440\u043C\u0430\u0442\u0443 json. \u041D\u0430\u043F\u0440\u0438\u043C\u0435\u0440 \u043D\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u044E\u0449\u0435\u0439 \u0437\u0430\u043F\u044F\u0442\u043E\u0439. ${i.message}`)}})}}};return O(D);})();
return plugin;
}
};
